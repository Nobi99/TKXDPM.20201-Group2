[{"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\index.js":"1","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\reportWebVitals.js":"2","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\App.js":"3","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\NavBar.js":"4","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\index.js":"5","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\TransactionResult.js":"6","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\HiringBike.js":"7","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\Home\\Home.js":"8","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\ListBike\\ListBike.js":"9","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\ListStation\\ListStation.js":"10","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\Timer.js":"11","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\StationItem.js":"12","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\NotFound.js":"13","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\transaction.api.js":"14","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\logic.js":"15","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\hooks\\useLoader.js":"16","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\station.api.js":"17","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\bike.api.js":"18","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\local.api.js":"19","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\Invoice.js":"20","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\BikeInfor.js":"21","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\DockingStation.js":"22","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\image\\index.js":"23","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\environment.js":"24","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\exceptions\\exceptions.js":"25","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\Loader.js":"26","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\Login.js":"27","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\Login1.js":"28"},{"size":545,"mtime":1608824292826,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1608824292831,"results":"31","hashOfConfig":"30"},{"size":890,"mtime":1609831724162,"results":"32","hashOfConfig":"30"},{"size":1318,"mtime":1608824292822,"results":"33","hashOfConfig":"30"},{"size":435,"mtime":1609830883397,"results":"34","hashOfConfig":"30"},{"size":2628,"mtime":1608858327006,"results":"35","hashOfConfig":"30"},{"size":9850,"mtime":1610043262006,"results":"36","hashOfConfig":"30"},{"size":1078,"mtime":1608824292828,"results":"37","hashOfConfig":"30"},{"size":2488,"mtime":1609722187424,"results":"38","hashOfConfig":"30"},{"size":1099,"mtime":1608824292829,"results":"39","hashOfConfig":"30"},{"size":827,"mtime":1608824292828,"results":"40","hashOfConfig":"30"},{"size":1309,"mtime":1608824292828,"results":"41","hashOfConfig":"30"},{"size":3636,"mtime":1608824292822,"results":"42","hashOfConfig":"30"},{"size":2646,"mtime":1608824292792,"results":"43","hashOfConfig":"30"},{"size":1004,"mtime":1608824292828,"results":"44","hashOfConfig":"30"},{"size":326,"mtime":1608824292826,"results":"45","hashOfConfig":"30"},{"size":2647,"mtime":1609728261278,"results":"46","hashOfConfig":"30"},{"size":2297,"mtime":1610040359620,"results":"47","hashOfConfig":"30"},{"size":1480,"mtime":1610043133099,"results":"48","hashOfConfig":"30"},{"size":1506,"mtime":1608824292827,"results":"49","hashOfConfig":"30"},{"size":1402,"mtime":1610040397812,"results":"50","hashOfConfig":"30"},{"size":1288,"mtime":1608824292821,"results":"51","hashOfConfig":"30"},{"size":925,"mtime":1608824292826,"results":"52","hashOfConfig":"30"},{"size":71,"mtime":1609234769030,"results":"53","hashOfConfig":"30"},{"size":349,"mtime":1608824292825,"results":"54","hashOfConfig":"30"},{"size":278,"mtime":1608824292821,"results":"55","hashOfConfig":"30"},{"size":4632,"mtime":1608824292830,"results":"56","hashOfConfig":"30"},{"size":5962,"mtime":1609839371008,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1m9ukzc",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\index.js",[],["123","124"],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\reportWebVitals.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\App.js",["125"],"import {\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\nimport {\r\n  ListDockingStation,\r\n  HiringBike,\r\n  Home,\r\n  ListBike,\r\n  TransactionResult,\r\n  Login1,\r\n  Login\r\n} from './page';\r\n\r\n\r\n\r\n\r\nimport NavBar from './component/NavBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router >\r\n      <div className=\"App\">\r\n        <NavBar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ Home } />\r\n          <Route exact path=\"/docking\" component={ ListDockingStation } />\r\n          <Route exact path=\"/login\" component={ Login1 } />\r\n          <Route path=\"/get-bike/station-:id\" component={ ListBike } />\r\n          <Route path=\"/get-bike/hiring-bike/:bikeId\" component={ HiringBike } />\r\n          <Route exact path=\"/transaction\" component={ TransactionResult } />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\NavBar.js",["126","127"],"/**\r\n * @author Chien Nobi\r\n */\r\n\r\n\r\nimport React from 'react'\r\nimport logo from '../assets/logo.jpg';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"navbar flex items-center\">\r\n            <div className=\"navbar-left flex items-center\">\r\n                <img src={ logo } alt=\"logo\" className=\"bd-circle logo\" />\r\n                <Link to=\"/\">NobBike</Link>\r\n                <form>\r\n                    <input type=\"text\" name=\"search-value\" className=\"form-input\" placeholder=\"Search here\" />\r\n                </form>\r\n            </div>\r\n            <div className=\"navbar-right flex items-center\">\r\n                <div className=\"user-infor flex items-center\">\r\n                    <img src={ logo } alt=\"logo\" className=\"bd-circle user-infor__avt\" />\r\n                    <p className=\"user-infor__name\">Chiến Nobi</p>\r\n                </div>\r\n                <div className=\"navigation flex items-center\">\r\n                    <Link to=\"/docking\" className=\"nav-link\">Bãi xe</Link>\r\n                    <Link to=\"/docking\" className=\"nav-link\">Thuê xe</Link>\r\n                    <Link to=\"/\" className=\"nav-link\">Liên hệ</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\index.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\TransactionResult.js",["128"],"\r\nimport React, { useEffect } from 'react';\r\nimport NotFound from '../component/NotFound'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    errorIcon\r\n} from '../image';\r\nconst TransactionResult = () => {\r\n\r\n\r\n    useEffect(() => {\r\n        return localStorage.removeItem('transactionResult');\r\n    })\r\n\r\n\r\n    var transaction = JSON.parse(localStorage.getItem('transactionResult'));\r\n    if (transaction !== null) {\r\n        return (\r\n            <div className=\"station-container\">\r\n                {/* {\r\n                        transaction.statusCode ? <Success /> : <Error />\r\n                    }\r\n                    <div className=\"return-home\">\r\n                        {\r\n                            transaction.statusCode ?\r\n                                <button className=\"btn-return btn\">Home</button>\r\n                                : <button className=\"btn-return btn\">Try again</button>\r\n                        }\r\n        \r\n                    </div> */}\r\n                <Success transaction={ transaction } />\r\n            </div>\r\n        )\r\n    }\r\n    else return <NotFound />;\r\n}\r\nconst Success = ({ transaction }) => {\r\n    console.log(transaction);\r\n    return (\r\n        <>\r\n            <div className=\"transaction-result\">\r\n                <p className=\"transaction-result-header\">\r\n                    Giao dịch thành công!!\r\n            </p>\r\n                <div className=\"transaction-result-body\">\r\n                    <div className=\"transaction-items\">\r\n                        <p><span>Tên khách hàng: </span>{ transaction.username }</p>\r\n                        <p><span>Tổng thời gian thuê: </span>{ transaction.hiringTime.h }h { transaction.hiringTime.m }p </p>\r\n                        <p><span>Tiền thuê xe: </span>{ transaction.fee.toLocaleString('en-US', { style: 'currency', currency: 'VND' }) }</p>\r\n                    </div>\r\n                    <p className=\"thank-sentence\">Cảm ơn quý khách đã sử dụng dịch vụ của NobBike.</p>\r\n                </div>\r\n            </div>\r\n            <Link to=\"/\" className=\"btn-return btn\">Home</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"transaction-result error\">\r\n            <p className=\"transaction-result-header\">\r\n                Giao dịch thất bại...\r\n            </p>\r\n            <div className=\"transaction-result-body flex items-center\">\r\n                <img src={ errorIcon } alt=\"error\" />\r\n                <p>Tài khoản không đủ số dư</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TransactionResult;","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\HiringBike.js",["129","130","131","132"],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\Home\\Home.js",["133","134"],"import React, { useEffect, useState } from 'react';\r\nimport backgroundImg from '../../assets/background2.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home flex items-center\" style={ {\r\n            backgroundImage: `url(${backgroundImg})`,\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center'\r\n        } }>\r\n            <div className=\"home-right\">\r\n                <h2>EcoBikeRental</h2>\r\n                <div className=\"infor\">\r\n                    <p>Thuê xe dễ dàng với QR code.</p>\r\n                    <p>Thanh toán tiện lợi.</p>\r\n                    <p>Trả xe bất kì lúc nào.</p>\r\n                    <p>Miễn phí trải nghiệm 10p đầu.</p>\r\n                </div>\r\n                <Link to=\"/docking\" className=\"btn rent-bike\">Thuê xe ngay</Link>\r\n            </div>\r\n            <div className=\"home-left\" style={ {\r\n\r\n            } }>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\ListBike\\ListBike.js",["135"],"import React, { useState, useEffect } from 'react';\r\nimport BikeInfor from '../../component/BikeInfor';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n    addressIcon,\r\n    distanceIcon,\r\n    emptySlotIcon,\r\n    bikeIcon,\r\n    areaIcon\r\n} from \"../../image\";\r\n\r\nimport { getAllBike } from '../../api/bike.api';\r\nimport { getStationById } from '../../api/station.api';\r\n\r\nconst ListBike = () => {\r\n\r\n    let { id } = useParams();\r\n    const [listBike, setListBike] = useState([]);\r\n    const [station, setStation] = useState('');\r\n\r\n    useEffect(() => {\r\n        getStationFromApi();\r\n        getBikeFromApi();\r\n    }, []);\r\n\r\n\r\n\r\n    const getBikeFromApi = async () => {\r\n        let queryResult = await getAllBike(id);\r\n        setListBike(queryResult);\r\n    }\r\n\r\n    const getStationFromApi = async () => {\r\n        let queryResult = await getStationById(id);\r\n        setStation(queryResult);\r\n    }\r\n\r\n    return (\r\n        <div className=\"station-container\">\r\n            <div className=\"station-header station-infor\">\r\n                <p>{ station.name }</p>\r\n                <div className=\"flex items-center station-infor-items\">\r\n                    <div className=\"item-attr address\">\r\n                        <img src={ addressIcon } alt=\"address icon\" />\r\n                        <p>{ station.address } </p>\r\n                    </div>\r\n                    <div className=\"item-attr\">\r\n                        <img src={ distanceIcon } alt=\"distance icon\" />\r\n                        <p>{ station.distance } m </p>\r\n                    </div>\r\n                    <div className=\"item-attr\">\r\n                        <img src={ areaIcon } alt=\"area icon\" />\r\n                        <p>{ station.area } m<sup>2</sup> </p>\r\n                    </div>\r\n                    <div className=\"item-attr\">\r\n                        <img src={ bikeIcon } alt=\"bike icon\" />\r\n                        <p>{ station.bikeNumber } </p>\r\n                    </div>\r\n                    <div className=\"item-attr\">\r\n                        <img src={ emptySlotIcon } alt=\"empty icon\" />\r\n                        <p>{ station.emptySlot } </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"list-station flex list-bike\">\r\n                { listBike.map((item) =>\r\n                    <BikeInfor bike={ item } key={ item.position } />\r\n                ) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ListBike;","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\ListStation\\ListStation.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\Timer.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\StationItem.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\NotFound.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\transaction.api.js",["136"],"import axios from \"axios\";\r\nimport crypto from \"crypto\";\r\nimport { interbankException } from \"../exceptions/exceptions\";\r\n\r\nlet card = {\r\n    cardCode: \"118609_group2_2020\",\r\n    owner: \"Group 2\",\r\n    cvvCode: 546,\r\n    dateExpired: 1125,\r\n}\r\n\r\nlet baseUrl = 'https://ecopark-system-api.herokuapp.com';\r\n\r\nlet makeTransaction = (command, amount, createdAt, content) => {\r\n    const transaction = {\r\n        command: `${command}`,\r\n        cardCode: \"118609_group2_2020\",\r\n        owner: \"Group 2\",\r\n        cvvCode: 546,\r\n        dateExpired: 1125,\r\n        transactionContent: content,\r\n        amount: amount,\r\n        createdAt: createdAt // time\r\n    }\r\n    console.log(transaction);\r\n    return transaction;\r\n\r\n\r\n}\r\n\r\nconst makeHashCode = (transaction) => {\r\n    const hashObject = {\r\n        secretKey: 'B0F8jDFXayo=',\r\n        transaction: transaction\r\n    }\r\n    let transactionJson = JSON.stringify(hashObject);\r\n    const hashCode = crypto.createHash('md5').update(transactionJson).digest('hex');\r\n    console.log(hashObject);\r\n    return hashCode;\r\n}\r\n/**\r\n * \r\n * @param {*} command \r\n * @param {*} amount \r\n * @param {*} content \r\n * @returns result from interbank api\r\n */\r\n\r\nconst payingCommand = async (command, amount, createdAt, content) => {\r\n    const transaction = makeTransaction(command, amount, createdAt, content);\r\n    const body = {\r\n        version: \"1.0.1\",\r\n        transaction: transaction,\r\n        appCode: 'pdUeA3+12w==',\r\n        hashCode: makeHashCode(transaction)\r\n    }\r\n    const result = await axios.patch(`${baseUrl}/api/card/processTransaction`, body);\r\n    switch (result.data.errorCode) {\r\n        case '01': throw new interbankException(\"\");\r\n        case '02': throw new interbankException(\"\");\r\n        case '03': throw new interbankException(\"\");\r\n        case '04': throw new interbankException(\"\");\r\n        case '05': throw new interbankException(\"\");\r\n\r\n        default:\r\n    }\r\n    return result;\r\n}\r\n\r\nconst resetBalance = async () => {\r\n    let resetBalanceBody = {\r\n        cardCode: \"118609_group2_2020\",\r\n        owner: \"Group 2\",\r\n        cvvCode: 546,\r\n        dateExpired: 1125\r\n    };\r\n    const result = await axios.patch(`${baseUrl}/api/card/reset-balance`, resetBalanceBody);\r\n    console.log(result);\r\n}\r\n\r\n// const transaction = {\r\n//     transactionId: 1,\r\n//     userName: \"Chiến Nobi\",\r\n//     startTime: 151416,\r\n//     endTime: 141414,\r\n//     bikeId: 1,\r\n//     name: \"Xe đạp đơn\",\r\n//     bikeCode: \"C1N001\",\r\n//     hiringFee: 45000,\r\n//     statusCode: 0, // \r\n//     message: \"Giao dịch thành công\"\r\n// }\r\n\r\nexport {\r\n    resetBalance,\r\n    payingCommand\r\n}","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\logic.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\hooks\\useLoader.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\station.api.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\bike.api.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\local.api.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\HiringBike\\Invoice.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\BikeInfor.js",["137"],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\DockingStation.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\image\\index.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\api\\environment.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\exceptions\\exceptions.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\component\\Loader.js",[],"D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\Login.js",["138"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import { accountService, alertService } from '../../services';\r\n\r\nfunction Login() {\r\n    const [passwordType, setPasswordType] = useState(\"password\");\r\n    const changePasswordType = () => {\r\n        if (passwordType === 'password') {\r\n            setPasswordType('text');\r\n        }\r\n        else setPasswordType('password');\r\n    }\r\n\r\n\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .required('Password is required')\r\n    });\r\n\r\n    // function onSubmit({ email, password }, { setSubmitting }) {\r\n    //     let body = {\r\n    //         username: email,\r\n    //         password: password\r\n    //     }\r\n    //     accountService.login(body)\r\n    //         .then(() => {\r\n    //             const { from } = location.state || { from: { pathname: \"/\" } };\r\n    //             history.push(from);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             setSubmitting(false);\r\n    //             alertService.error(error);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <Formik initialValues={ initialValues } validationSchema={ validationSchema }>\r\n            {({ errors, touched, isSubmitting, values }) => (\r\n                <Form className=\"form-container\">\r\n                    <div className=\"login__form\">\r\n                        <p className=\"login-header\">Đăng nhập</p>\r\n                        <div className=\"ps-rl input-swapper\" style={ { marginBottom: 50 } }>\r\n                            <span className=\"icon--user input__icon\">\r\n                                <i className=\"far fa-user\"></i>\r\n                            </span>\r\n                            <Field\r\n                                type=\"email\"\r\n                                className={ \"form__input\" + (!values.email ? \"\" : \" has-value\") + (errors.email && touched.email ? ' is-invalid' : '') }\r\n                                name=\"email\"\r\n                            />\r\n                            <span className=\"input__focus\" data-name=\"Email\"></span>\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback err\" />\r\n                        </div>\r\n                        <div className=\"ps-rl input-swapper\">\r\n                            <span className=\"icon--password input__icon\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </span>\r\n                            <Field\r\n                                type={ passwordType }\r\n                                className={ \"form__input is-invalid\" + (!values.password ? \"\" : \" has-value\") + (errors.password && touched.password ? ' is-invalid' : '') }\r\n                                name=\"password\"\r\n                            />\r\n                            <span className=\"input__focus\" data-name=\"Password\"></span>\r\n                            <span className=\"toggle-password\" onClick={ changePasswordType }>\r\n                                { passwordType === \"text\" ? <i className=\"fas fa-eye\"></i> : <i className=\"fas fa-eye-slash\"></i> }\r\n                            </span>\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback err\" />\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {/* <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">Quên mật khẩu?</Link> */ }\r\n                        </div>\r\n                        <button type=\"submit\" disabled={ isSubmitting } className=\"btn btn-success\">\r\n                            { isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span> }\r\n                            Login\r\n                        </button>\r\n                        <div className=\"register\">\r\n                            <div className=\"divider\"></div>\r\n                            <p>Bạn chưa có tài khoản</p>\r\n                            <div className=\"divider\"></div>\r\n                        </div>\r\n\r\n                        {/* <Link to=\"register\" className=\"btn btn-info btn--register\">Đăng ký ngay</Link> */ }\r\n                    </div>\r\n                </Form>\r\n            ) }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Login; ","D:\\TKXDPM.20201-2\\Final Project\\Construction\\Mã nguồn\\frontend\\src\\page\\Login1.js",["139","140","141"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import { accountService, alertService } from '../../services';\r\n\r\nfunction Login1() {\r\n\r\n\r\n\r\n    const initialValues = {\r\n        cardCode: '',\r\n        owner: '',\r\n        cvvCode: '',\r\n        dateExpire: ''\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        cardCode: Yup.string().required('Card Code is required'),\r\n        owner: Yup.string()\r\n            .required('owner is required'),\r\n        cvvCode: Yup.string()\r\n            .required('Cvv code is required'),\r\n        dateExpire: Yup.string()\r\n            .required('Date Expire is required'),\r\n    });\r\n\r\n    function onSubmit({ cardCode, cvvCode, owner, dateExpire }, { setSubmitting }) {\r\n        let body = {\r\n            cardCode: cardCode,\r\n            cvvCode: cvvCode\r\n        }\r\n        // accountService.login(body)\r\n        //     .then(() => {\r\n        //         const { from } = location.state || { from: { pathname: \"/\" } };\r\n        //         history.push(from);\r\n        //     })\r\n        //     .catch(error => {\r\n        //         setSubmitting(false);\r\n        //         alertService.error(error);\r\n        //     });\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={ initialValues } validationSchema={ validationSchema } onSubmit={ onSubmit }>\r\n            {({ errors, touched, isSubmitting, values }) => (\r\n                <Form className=\"form-container\">\r\n                    <div className=\"login__form\">\r\n                        <p className=\"login-header\">Card Input</p>\r\n                        <div className=\"ps-rl input-swapper\" style={ { marginBottom: 50 } }>\r\n                            <span className=\"icon--user input__icon\">\r\n                                <i className=\"far fa-credit-card\"></i>\r\n                            </span>\r\n                            <Field\r\n                                type=\"text\"\r\n                                className={ \"form__input\" + (!values.cardCode ? \"\" : \" has-value\") + (errors.cardCode && touched.cardCode ? ' is-invalid' : '') }\r\n                                name=\"cardCode\"\r\n                            />\r\n                            <span className=\"input__focus\" data-name=\"Card Code\"></span>\r\n                            <ErrorMessage name=\"cardCode\" component=\"div\" className=\"invalid-feedback err\" />\r\n                        </div>\r\n                        <div className=\"ps-rl input-swapper\" style={ { marginBottom: 50 } }>\r\n                            <span className=\"icon--user input__icon\">\r\n                                <i className=\"far fa-user\"></i>\r\n                            </span>\r\n                            <Field\r\n                                type=\"text\"\r\n                                className={ \"form__input\" + (!values.owner ? \"\" : \" has-value\") + (errors.owner && touched.owner ? ' is-invalid' : '') }\r\n                                name=\"owner\"\r\n                            />\r\n                            <span className=\"input__focus\" data-name=\"Owner\"></span>\r\n                            <ErrorMessage name=\"owner\" component=\"div\" className=\"invalid-feedback err\" />\r\n                        </div>\r\n                        <div className=\"ps-rl input-swapper\" style={ { marginBottom: 50 } }>\r\n                            <span className=\"icon--user input__icon\">\r\n                                <i className=\"far fa-user\"></i>\r\n                            </span>\r\n                            <Field\r\n                                type=\"text\"\r\n                                className={ \"form__input\" + (!values.cvvCode ? \"\" : \" has-value\") + (errors.cvvCode && touched.cvvCode ? ' is-invalid' : '') }\r\n                                name=\"cvvCode\"\r\n                            />\r\n                            <span className=\"input__focus\" data-name=\"cvvCode\"></span>\r\n                            <ErrorMessage name=\"cvvCode\" component=\"div\" className=\"invalid-feedback err\" />\r\n                        </div>\r\n                        <div className=\"ps-rl input-swapper\">\r\n                            <span className=\"icon--password input__icon\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </span>\r\n                            <Field\r\n                                type=\"text\"\r\n                                className={ \"form__input is-invalid\" + (!values.dateExpire ? \"\" : \" has-value\") + (errors.dateExpire && touched.dateExpire ? ' is-invalid' : '') }\r\n                                name=\"dateExpire\"\r\n                            />\r\n                            <span className=\"input__focus\" data-name=\"Date Expired\"></span>\r\n                            <ErrorMessage name=\"dateExpire\" component=\"div\" className=\"invalid-feedback err\" />\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {/* <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">Quên mật khẩu?</Link> */ }\r\n                        </div>\r\n                        <button type=\"submit\" disabled={ isSubmitting } className=\"btn btn-success\">\r\n                            { isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span> }\r\n                            Login\r\n                        </button>\r\n                        {/* <div className=\"register\">\r\n                            <div className=\"divider\"></div>\r\n                            <p>Bạn chưa có tài khoản</p>\r\n                            <div className=\"divider\"></div>\r\n                        </div> */}\r\n\r\n                        {/* <Link to=\"register\" className=\"btn btn-info btn--register\">Đăng ký ngay</Link> */ }\r\n                    </div>\r\n                </Form>\r\n            ) }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Login1; ",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":13,"column":3,"nodeType":"148","messageId":"149","endLine":13,"endColumn":8},{"ruleId":"146","severity":1,"message":"150","line":8,"column":16,"nodeType":"148","messageId":"149","endLine":8,"endColumn":22},{"ruleId":"146","severity":1,"message":"151","line":8,"column":24,"nodeType":"148","messageId":"149","endLine":8,"endColumn":29},{"ruleId":"146","severity":1,"message":"152","line":60,"column":7,"nodeType":"148","messageId":"149","endLine":60,"endColumn":12},{"ruleId":"153","severity":1,"message":"154","line":46,"column":8,"nodeType":"155","endLine":46,"endColumn":10,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":52,"column":8,"nodeType":"155","endLine":52,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":128,"column":27,"nodeType":"161","messageId":"162","endLine":128,"endColumn":29},{"ruleId":"159","severity":1,"message":"163","line":224,"column":48,"nodeType":"161","messageId":"162","endLine":224,"endColumn":50},{"ruleId":"146","severity":1,"message":"164","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"165","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"166","line":24,"column":8,"nodeType":"155","endLine":24,"endColumn":10,"suggestions":"167"},{"ruleId":"146","severity":1,"message":"168","line":5,"column":5,"nodeType":"148","messageId":"149","endLine":5,"endColumn":9},{"ruleId":"159","severity":1,"message":"163","line":32,"column":30,"nodeType":"161","messageId":"162","endLine":32,"endColumn":32},{"ruleId":"146","severity":1,"message":"169","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"165","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"169","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"170","line":30,"column":13,"nodeType":"148","messageId":"149","endLine":30,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'interv'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has missing dependencies: 'getAvailStationFromApi' and 'getBikeFromApi'. Either include them or remove the dependency array.",["174"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getBikeFromApi' and 'getStationFromApi'. Either include them or remove the dependency array.",["175"],"'card' is assigned a value but never used.","'Link' is defined but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [interv]",{"range":"182","text":"183"},"Update the dependencies array to be: [getAvailStationFromApi, getBikeFromApi]",{"range":"184","text":"185"},"Update the dependencies array to be: [getBikeFromApi, getStationFromApi]",{"range":"186","text":"187"},[1654,1656],"[interv]",[1779,1781],"[getAvailStationFromApi, getBikeFromApi]",[630,632],"[getBikeFromApi, getStationFromApi]"]